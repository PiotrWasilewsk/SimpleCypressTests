
describe('Automation exercise', () => {

  it('Test Case 1: Register User', () => {
    cy.visit('http://automationexercise.com')
    cy.get('.logo').should('be.visible')
    cy.contains('Signup / Login').click()
    cy.get('h2').should('contain', 'New User Signup!')
    cy.get('[data-qa="signup-name"]').type('text')
    cy.get('[data-qa="signup-email"]').type('emailTest' + Math.random() + '@gmail.com')
    cy.get('[data-qa="signup-button"]').click()
    cy.get(':nth-child(1) > b').invoke('prop', 'innerText').then($text => {
      let x = $text
      cy.log(x)
      expect(x).eq("ENTER ACCOUNT INFORMATION")
    })

    cy.get('#id_gender1').click()
    cy.get('#password').type('!samplePassword1')
    cy.get('[data-qa="days"]').select(25)
    cy.get('[data-qa="months"]').select('October')
    cy.get('[data-qa="years"]').select('1982')
    cy.get('#newsletter').click()
    cy.get('#optin').click()
    cy.get('#first_name').type('Piotr')
    cy.get('#last_name').type('Kuna')
    cy.get('#company').type('Seagull')
    cy.get('#address1').type('Apostolou Titou 13 00-250 Agios Nicolaos')
    cy.get('#address1').invoke('val').then($text => {
      let x = $text
      cy.log(x)
      expect(x).eq("Apostolou Titou 13 00-250 Agios Nicolaos")
    })
    cy.get('#address2').type('Solidarności 18 01-031 Warszawa')
    cy.get('[data-qa="country"]').select('Israel')
    cy.get('#state').type('Mazovian')
    cy.get('#city').type('Tel-Aviv')
    cy.get('#zipcode').type('00-330')
    cy.get('#mobile_number').type('123456789')
    cy.get('[data-qa="create-account"]').click()
    cy.get('[data-qa="account-created"]').should('have.text', 'Account Created!')
    cy.get('[data-qa="continue-button"]').click()
    cy.get(':nth-child(10) > a').should('be.visible')
    cy.get('.shop-menu > .nav > :nth-child(5)').click()
    cy.get('[data-qa="account-deleted"]').should('have.text', 'Account Deleted!')
    cy.get('[data-qa="continue-button"]').click()
  })
  let loginLocator = '[data-qa="login-email"]';
  let login = 'nemo@o2.pl';
  let passwordLocator = '[data-qa="login-password"]';
  let password = 'nemo12345';
  let loginButton = '[data-qa="login-button"]'
  let registerLocator = '[data-qa="signup-name"]'
  let registerName = 'nemo'
  let emailLocator = '[data-qa="signup-email"]'
  let registerEmail = 'nemo@o2.pl'
  let signUpButton = '[data-qa="signup-button"]'
  it('Test Case 2: Login User with correct email and password', () => {
    cy.visit('http://automationexercise.com')
    cy.get('.logo').should('be.visible')
    cy.contains('Signup / Login').click()
    cy.get('[data-qa="signup-name"]').type('nemo')
    cy.get('[data-qa="signup-email"]').type('nemo@o2.pl')
    cy.get('[data-qa="signup-button"]').click()
    cy.get('#id_gender1').click()
    cy.get('#password').type('nemo12345')
    cy.get('[data-qa="days"]').select(25)
    cy.get('[data-qa="months"]').select('October')
    cy.get('[data-qa="years"]').select('1982')
    cy.get('#newsletter').click()
    cy.get('#optin').click()
    cy.get('#first_name').type('Piotr')
    cy.get('#last_name').type('Kuna')
    cy.get('#company').type('Seagull')
    cy.get('#address1').type('Apostolou Titou 13 00-250 Agios Nicolaos')
    cy.get('#address2').type('Solidarności 18 01-031 Warszawa')
    cy.get('[data-qa="country"]').select('Israel')
    cy.get('#state').type('Mazovian')
    cy.get('#city').type('Tel-Aviv')
    cy.get('#zipcode').type('00-330')
    cy.get('#mobile_number').type('123456789')
    cy.get('[data-qa="create-account"]').click()
    cy.get('[data-qa="account-created"]').should('have.text', 'Account Created!')
    cy.get('[data-qa="continue-button"]').click()
    cy.get('.shop-menu > .nav > :nth-child(4) > a').click()
    cy.contains('Signup / Login').click()
    cy.get('.login-form').should('contain.text', 'Login to your account')
    cy.UserLog(loginLocator, login, passwordLocator, password, loginButton)
    cy.get(':nth-child(10) > a').should('be.visible')
    cy.get('.shop-menu > .nav > :nth-child(5)').click()
    cy.get('[data-qa="account-deleted"]').should('have.text', 'Account Deleted!')
    cy.contains('Signup / Login').click()
    cy.get('[data-qa="signup-name"]').type('nemo')
    cy.get('[data-qa="signup-email"]').type('nemo@o2.pl')
    cy.get('[data-qa="signup-button"]').click()
    cy.get('#id_gender1').click()
    cy.get('#password').type('nemo12345')
    cy.get('[data-qa="days"]').select(25)
    cy.get('[data-qa="months"]').select('October')
    cy.get('[data-qa="years"]').select('1982')
    cy.get('#newsletter').click()
    cy.get('#optin').click()
    cy.get('#first_name').type('Piotr')
    cy.get('#last_name').type('Kuna')
    cy.get('#company').type('Seagull')
    cy.get('#address1').type('Apostolou Titou 13 00-250 Agios Nicolaos')
    cy.get('#address2').type('Solidarności 18 01-031 Warszawa')
    cy.get('[data-qa="country"]').select('Israel')
    cy.get('#state').type('Mazovian')
    cy.get('#city').type('Tel-Aviv')
    cy.get('#zipcode').type('00-330')
    cy.get('#mobile_number').type('123456789')
    cy.get('[data-qa="create-account"]').click()
    cy.get('[data-qa="account-created"]').should('have.text', 'Account Created!')
    cy.get('[data-qa="continue-button"]').click()
  })
  it('Test Case 3: Login User with incorrect email and password', () => {
    cy.visit('http://automationexercise.com')
    cy.get('.logo').should('be.visible')
    cy.contains('Signup / Login').click()
    cy.get('.login-form').should('contain.text', 'Login to your account')
    cy.get('[data-qa="login-email"]').type('nemo1@o2.pl')
    cy.get('[data-qa="login-password"]').type('nemo123456')
    cy.get('[data-qa="login-button"]').click()
    cy.get('.login-form > form > p').should('have.text', 'Your email or password is incorrect!')
  })
  it('Test Case 4: Logout User', () => {
    cy.visit('http://automationexercise.com')
    cy.get('.logo').should('be.visible')
    cy.contains('Signup / Login').click()
    cy.get('.login-form').should('contain.text', 'Login to your account')
    cy.UserLog(loginLocator, login, passwordLocator, password, loginButton)
    cy.get('[data-qa="login-email"]').type('nemo@o2.pl')
    cy.get('[data-qa="login-password"]').type('nemo12345')
    cy.get('[data-qa="login-button"]').click()
    cy.get(':nth-child(10) > a').should('be.visible')
    cy.get('.shop-menu > .nav > :nth-child(4) > a').click()
    cy.get('.login-form > form').should('be.visible')
  })
  it('Test Case 5: Register User with existing email', () => {
    cy.visit('http://automationexercise.com')
    cy.get('.logo').should('be.visible')
    cy.contains('Signup / Login').click()
    cy.get('h2').should('contain', 'New User Signup!')
    cy.userRegister(registerLocator, registerName, emailLocator, registerEmail, signUpButton)
    cy.get('.signup-form > form > p').should('be.visible').should('have.text', 'Email Address already exist!')
  })
  it.only('Test Case 6: Contact Us Form', () => {
    cy.visit('http://automationexercise.com')
    cy.get('.logo').should('be.visible')
    cy.get('.shop-menu > .nav > :nth-child(8) > a').click()
    cy.get('.title').should('be.visible').should('contain', 'Get In Touch')
    cy.get('[data-qa="name"]').type('John')
    cy.get('[data-qa="email"]').type('nemo@o2.pl')
    cy.get('[data-qa="subject"]').type('sampleTest')
    cy.get('[data-qa="message"]').type('Hello World!!!')
    cy.xpath('//input[text()="Wybierz plik"]').click()

    
  })

  it('eBay-tc1', () => {
    cy.visit('https://www.ebay.pl/')
    cy.get('#gdpr-banner-accept').click()
    cy.get('#gh-logo').should('be.visible')
    cy.get('.gh-tb').type('iphone')
    cy.get('#gh-btn').click()
    cy.get('[class="textbox x-textrange__input x-textrange__input--from"]')
      .type('100')
    cy.get('[class="textbox x-textrange__input x-textrange__input--to"]')
      .type('1000')
    cy.get('.btn--states').should('be.visible').click()
    cy.get('.remove-filter-link').should('be.visible')
    cy.get('.s-item__wrapper')
      .parents('ul')
      .find('.s-item__price')
      .then((prices) => {
        let expectPrices = (Array.from(prices).map((price) => parseFloat(price.innerText)))
        expect(expectPrices.every((price) => price >= 100 && price <= 1000)).to.be.true
      })
  })
})

